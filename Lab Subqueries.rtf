{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 -- How many copies of the film Hunchback Impossible exist in the inventory system?\
\
select *\
from sakila.film f\
join sakila.inventory i \
on f.film_id = i.film_id;\
\
\
select count(i.inventory_id)\
from sakila.film f\
join sakila.inventory i \
on f.film_id = i.film_id\
where f.title = 'Hunchback Impossible';\
\
-- List all films whose length is longer than the average of all the films.\
select title, length\
from sakila.film\
where length >\
(\
select avg(length)\
from sakila.film f\
)\
order by length;\
\
-- Use subqueries to display all actors who appear in the film Alone Trip.\
\
\
select concat(first_name,' ', last_name) as Actor\
from sakila.actor\
where actor_id in \
	(select actor_id \
	from sakila.film_actor\
	where film_id in \
		(select film_id \
		from sakila.film\
		where title = 'Alone Trip'));\
		\
-- Sales have been lagging among young families, and you wish to target all family movies for a promotion. Identify all movies categorized as family films\
\
select film.title\
from sakila.film\
where film_id in \
	(select film_id\
	from sakila.film_category\
	where category_id in\
			(select category_id\
			from sakila.category\
			where name = 'Family'));\
			\
-- Get name and email from customers from Canada using subqueries. \
\
select concat(first_name, ' ', last_name) as Customer, email \
from sakila.customer\
where address_id in\
	(select address_id \
	from sakila.address \
	where city_id in\
		(select city_id\
		from sakila.city\
		where country_id in \
			(select country_id \
			from sakila.country\
			where country = 'Canada')));\
			\
-- Do the same with joins. Note that to create a join, you will have to identify the correct tables with their primary keys and foreign keys, that will help you get the relevant information\
\
select concat(c.first_name, ' ', c.last_name) as Name, c.email \
from sakila.customer c\
join sakila.address a\
on c.address_id = a.address_id\
join sakila.city ct\
on a.city_id = ct.city_id \
join sakila.country co\
on ct.country_id = co.country_id\
where country = 'Canada';  \
\
-- Which are films starred by the most prolific actor? Most prolific actor is defined as the actor that has acted in the most number of films. First you will have to find the most prolific actor and then use that actor_id to find the different films that he/she starred.\
select title from film where film_id in\
( select film_id from film_actor where actor_id =\
	(select actor_id from film_actor \
	group by actor_id\
	order by count(*) desc \
    limit 1));\
\
-- Films rented by most profitable customer. You can use the customer table and payment table to find the most profitable customer ie the customer that has made the largest sum of payments\
select inventory_id\
from sakila.rental \
where customer_id in (\
	select customer_id, sum(amount) as spent\
	from sakila.payment\
	group by customer_id\
	order by spent desc)\
	limit 1;\
	\
\
}